--- tsdecrypt-10.0/libfuncs/Makefile.orig	2025-03-21 19:11:58.346415774 +0100
+++ tsdecrypt-10.0/libfuncs/Makefile	2025-03-21 19:12:37.972867766 +0100
@@ -3,7 +3,7 @@ LINK = $(CROSS)$(TARGET)ld -o
 MKDEP = $(CC) -M -o $*.d $<
 
 LIBRARY_LINK_OPTS =  -L. -r
-CFLAGS = -O2 -ggdb -std=c99 -D_GNU_SOURCE
+CFLAGS = $(OPTFLAGS) -std=c99 -D_GNU_SOURCE
 CFLAGS += -Wall -Wextra -Wshadow -Wformat-security -Wstrict-prototypes
 RM = /bin/rm -f
 Q=@
--- tsdecrypt-10.0/libtsfuncs/Makefile.orig	2025-03-21 19:11:58.346415774 +0100
+++ tsdecrypt-10.0/libtsfuncs/Makefile	2025-03-21 19:13:04.889388613 +0100
@@ -3,7 +3,7 @@ LINK = $(CROSS)$(TARGET)ld -o
 MKDEP = $(CC) -M -o $*.d $<
 
 LIBRARY_LINK_OPTS =  -L. -r
-CFLAGS = -O2 -ggdb -std=c99 -D_GNU_SOURCE
+CFLAGS = $(OPTFLAGS) -std=c99 -D_GNU_SOURCE
 CFLAGS += -Wall -Wextra -Wshadow -Wformat-security -Wstrict-prototypes
 RM = /bin/rm -f
 Q=@
--- tsdecrypt-10.0/Makefile.orig	2025-03-21 19:11:58.349749090 +0100
+++ tsdecrypt-10.0/Makefile	2025-03-21 19:14:09.459038810 +0100
@@ -15,7 +15,7 @@ ifndef V
 Q = @
 endif
 
-CFLAGS ?= -O2 -ggdb \
+CFLAGS ?= $(OPTFLAGS) \
  -W -Wall -Wextra \
  -Wshadow -Wformat-security -Wstrict-prototypes
 
@@ -81,24 +81,24 @@ ffdecsa: clean
 	$(Q)echo "Switching build to FFdecsa."
 	@-if test -e FFdecsa.opts.saved; then $(MV) FFdecsa.opts.saved FFdecsa.opts; fi
 	@-if ! test -e FFdecsa.opts; then ./FFdecsa_init "$(CROSS)$(TARGET)" "$(CC)"; fi
-	$(Q)$(MAKE) -s tsdecrypt
+	$(Q)$(MAKE) tsdecrypt
 
 ffdecsa_force:
 	$(Q)$(RM) FFdecsa.opts
-	$(Q)$(MAKE) -s ffdecsa
+	$(Q)$(MAKE) ffdecsa
 
 dvbcsa: clean
 	$(Q)echo "Switching build to libdvbcsa."
 	@-if test -f FFdecsa.opts; then $(MV) FFdecsa.opts FFdecsa.opts.saved; fi
-	$(Q)$(MAKE) -s tsdecrypt
+	$(Q)$(MAKE) tsdecrypt
 
 $(FUNCS_LIB): $(FUNCS_DIR)/libfuncs.h
 	$(Q)echo "  MAKE	$(FUNCS_LIB)"
-	$(Q)$(MAKE) -s -C $(FUNCS_DIR)
+	$(Q)$(MAKE) -C $(FUNCS_DIR)
 
 $(TS_LIB): $(TS_DIR)/tsfuncs.h $(TS_DIR)/tsdata.h
 	$(Q)echo "  MAKE	$(TS_LIB)"
-	$(Q)$(MAKE) -s -C $(TS_DIR)
+	$(Q)$(MAKE) -C $(TS_DIR)
 
 tsdecrypt: $(tsdecrypt_OBJS)
 	$(Q)echo "  LINK	tsdecrypt"
@@ -111,7 +111,7 @@ tsdecrypt: $(tsdecrypt_OBJS)
 
 FFdecsa/FFdecsa.o:
 	$(Q)echo "  MAKE	FFdecsa"
-	$(Q)$(MAKE) -s -C FFdecsa FLAGS=$(FFDECSA_FLAGS) PARALLEL_MODE=$(FFDECSA_MODE) COMPILER=$(CROSS)$(CC) FFdecsa.o
+	$(Q)$(MAKE) -C FFdecsa FLAGS=$(FFDECSA_FLAGS) PARALLEL_MODE=$(FFDECSA_MODE) COMPILER=$(CROSS)$(CC) FFdecsa.o
 
 -include $(tsdecrypt_SRC:.c=.d)
 
@@ -124,8 +124,8 @@ clean:
 	$(Q)$(RM) $(CLEAN_OBJS)
 
 distclean: clean
-	$(Q)$(MAKE) -s -C $(TS_DIR) clean
-	$(Q)$(MAKE) -s -C $(FUNCS_DIR) clean
+	$(Q)$(MAKE) -C $(TS_DIR) clean
+	$(Q)$(MAKE) -C $(FUNCS_DIR) clean
 	$(Q)$(RM) FFdecsa.opts
 
 install: all
